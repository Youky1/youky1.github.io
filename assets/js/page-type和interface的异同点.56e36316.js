(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{602:function(t,e,a){"use strict";a.r(e);var n=a(1),r=Object(n.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"type-和-interface-的异同点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-和-interface-的异同点"}},[t._v("#")]),t._v(" type 和 interface 的异同点")]),t._v(" "),e("blockquote",[e("p",[t._v("interface 就是描述对象对外暴露的接口，其不应该具有过于复杂的类型逻辑，最多局限于泛型约束与索引类型这个层面。而 type alias 就是用于将一组类型的重命名，或是对类型进行复杂编程")])]),t._v(" "),e("p",[t._v("相同：")]),t._v(" "),e("ol",[e("li",[t._v("都可以用于描述对象类型、函数类型、Class 类型")])]),t._v(" "),e("p",[t._v("不同：")]),t._v(" "),e("ol",[e("li",[t._v("在进行扩展时：interface 使用 extends，type 使用交叉类型（接口继承的性能更好）")]),t._v(" "),e("li",[t._v("同名的 interface 会合并，type 不会")]),t._v(" "),e("li",[t._v("interface 无法表示元组、联合类型等其他类型或复杂的类型工具")])])])}),[],!1,null,null,null);e.default=r.exports}}]);