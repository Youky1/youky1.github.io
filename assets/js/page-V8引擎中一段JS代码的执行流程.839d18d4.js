(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{648:function(t,v,_){"use strict";_.r(v);var s=_(1),a=Object(s.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"v8引擎中一段js代码的执行流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#v8引擎中一段js代码的执行流程"}},[t._v("#")]),t._v(" V8引擎中一段JS代码的执行流程")]),t._v(" "),v("h2",{attrs:{id:"生成ast-抽象语法树"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#生成ast-抽象语法树"}},[t._v("#")]),t._v(" 生成AST（抽象语法树）")]),t._v(" "),v("ul",[v("li",[t._v("经过"),v("strong",[t._v("词法分析")]),t._v("，将代码各个部分转换为一个个token")]),t._v(" "),v("li",[t._v("经过"),v("strong",[t._v("语法分析")]),t._v("，将上一步的token转换为AST")]),t._v(" "),v("li",[t._v("生成AST之后，编译器的后续工作都是基于AST而不是源代码。")])]),t._v(" "),v("blockquote",[v("p",[t._v("Babel的原理：将ES6代码生成ES6的AST，然后转换为ES5的AST，然后转为ES5的代码")])]),t._v(" "),v("h2",{attrs:{id:"生成字节码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#生成字节码"}},[t._v("#")]),t._v(" 生成字节码")]),t._v(" "),v("p",[t._v("字节码是介于AST和机器码之间的一种代码，"),v("strong",[t._v("与特定类型的机器无关")]),t._v("。")]),t._v(" "),v("p",[t._v("字节码需要通过解释器将其转换为机器码然后执行。")]),t._v(" "),v("p",[v("strong",[t._v("使用字节码的原因")]),t._v("：机器码的体积太大，会引发内存占用问题。")]),t._v(" "),v("h2",{attrs:{id:"执行代码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#执行代码"}},[t._v("#")]),t._v(" 执行代码")]),t._v(" "),v("p",[t._v("最终，将生成的字节码逐行执行，不会生成二进制文件。")]),t._v(" "),v("p",[t._v("在执行过程中，如果一段代码重复出现，V8引擎会将其标记为"),v("code",[t._v("热点代码")]),t._v("，将这部分代码编译后的机器码保存起来。")]),t._v(" "),v("p",[t._v("所以，代码执行的时间越久，效率就越高（因为"),v("code",[t._v("热点代码")]),t._v("变多了）")])])}),[],!1,null,null,null);v.default=a.exports}}]);