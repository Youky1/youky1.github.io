(window.webpackJsonp=window.webpackJsonp||[]).push([[122],{652:function(t,a,s){"use strict";s.r(a);var e=s(1),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"跨域问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跨域问题"}},[t._v("#")]),t._v(" 跨域问题")]),t._v(" "),a("p",[a("strong",[t._v("原因")]),t._v("："),a("strong",[t._v("浏览器")]),t._v("的同源策略。从安全性的角度考虑，为了限制非同源的接口请求和DOM查询。")]),t._v(" "),a("p",[t._v("同源：协议、IP地址、端口号相同的属于同源。")]),t._v(" "),a("p",[t._v("PS：域名和域名对应的IP地址，也属于跨域。")]),t._v(" "),a("h2",{attrs:{id:"jsonp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jsonp"}},[t._v("#")]),t._v(" JSONP")]),t._v(" "),a("p",[a("strong",[t._v("原理")]),t._v("：script标签的获取是不受跨域限制的，因此可以通过加载跨域的js来实现跨域。")]),t._v(" "),a("p",[a("strong",[t._v("限制")]),t._v("：只能进行get请求。")]),t._v(" "),a("p",[t._v("实现方法：")]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对于请求的数据的操作")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://domain.com/api?callback=fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}}),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h2",{attrs:{id:"cors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cors"}},[t._v("#")]),t._v(" CORS")]),t._v(" "),a("p",[a("code",[t._v("CORS")]),t._v("是一个W3C的标准，全称是跨域资源共享，允许浏览器向跨域服务器发送网络请求。")]),t._v(" "),a("p",[t._v("CORS标准将请求分为两类，"),a("strong",[t._v("简单请求")]),t._v("和"),a("strong",[t._v("非简单请求")]),t._v("。")]),t._v(" "),a("p",[t._v("CORS请求的响应头，都以"),a("code",[t._v("Access-Control-")]),t._v("开头：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Access-Control-Allow-Origin")]),t._v("：必选。允许跨域请求的源，要么为请求头中"),a("code",[t._v("Origin")]),t._v("的值，要么为*")]),t._v(" "),a("li",[a("code",[t._v("Access-Control-Allow-Credentials")]),t._v("：可选。表示是否允许发送cookie")]),t._v(" "),a("li",[a("code",[t._v("Access-Control-Expose-Headers")]),t._v("：可选。允许额外暴露的"),a("strong",[t._v("响应头字段")]),t._v("（默认情况下只允许使用"),a("code",[t._v("Cache-Control")]),t._v("、"),a("code",[t._v("Content-Language")]),t._v("、"),a("code",[t._v("Content-Type")]),t._v("、"),a("code",[t._v("Expires")]),t._v("、"),a("code",[t._v("Last-Modified")]),t._v("、"),a("code",[t._v("Pragma")]),t._v("六个字段）")])]),t._v(" "),a("h3",{attrs:{id:"简单请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单请求"}},[t._v("#")]),t._v(" 简单请求")]),t._v(" "),a("p",[t._v("简单请求的定义是：")]),t._v(" "),a("ol",[a("li",[t._v("请求方法是GET、POST、HEAD中的一种")]),t._v(" "),a("li",[t._v("header中的字段不超过："),a("code",[t._v("Accept")]),t._v("、"),a("code",[t._v("Accept-Language")]),t._v("、"),a("code",[t._v("Content-Language")]),t._v("、"),a("code",[t._v("Content-Type")])])]),t._v(" "),a("p",[t._v("对于简单请求，浏览器直接发送CORS请求。并在请求头中添加一个"),a("code",[t._v("Origin")]),t._v("字段，服务器根据这个字段决定是否同意这次请求。")]),t._v(" "),a("h3",{attrs:{id:"非简单请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非简单请求"}},[t._v("#")]),t._v(" 非简单请求")]),t._v(" "),a("p",[t._v("对于非简单请求，会在通信前增加一次查询，称为“预检请求”。")]),t._v(" "),a("p",[t._v("预检请求使用的方法是"),a("code",[t._v("OPTION")]),t._v("，并附加三个字段：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Origin")]),t._v("：发送请求的源")]),t._v(" "),a("li",[a("code",[t._v("Access-Control-Request-Method")]),t._v("："),a("strong",[t._v("必选")]),t._v("。列出浏览器要用到哪些请求方法")]),t._v(" "),a("li",[a("code",[t._v("Access-Control-Request-Headers")]),t._v("："),a("strong",[t._v("可选")]),t._v("。列出浏览器要使用的额外的请求头字段")])]),t._v(" "),a("p",[t._v("服务器收到预检请求后，根据上述三个字段的值判断是否允许。若确认允许，则返回响应。对于非简单请求特有的是：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Access-Control-Allow-Methods")]),t._v("：必选。列出允许使用的"),a("strong",[t._v("所有")]),t._v("方法，而不只是请求中列出的方法（避免多次预检请求）")]),t._v(" "),a("li",[a("code",[t._v("Access-Control-Allow-Headers")]),t._v("：若请求中包含"),a("code",[t._v("Access-Control-Request-Headers")]),t._v("则必选。列出支持的所有头部字段")]),t._v(" "),a("li",[a("code",[t._v("Access-Control-Max-Age")]),t._v("：可选。本次预检请求的有效时间")])]),t._v(" "),a("h2",{attrs:{id:"nginx代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx代理"}},[t._v("#")]),t._v(" nginx代理")]),t._v(" "),a("p",[t._v("有两种思路：")]),t._v(" "),a("ol",[a("li",[t._v("和CORS一样，通过设置"),a("code",[t._v("Access-Control-")]),t._v("系列字段实现跨域。")]),t._v(" "),a("li",[t._v("通过反向代理。由于服务端的请求不存在跨域问题，以nginx为中转可以将一个跨域的服务代理到同源上")])]),t._v(" "),a("h2",{attrs:{id:"中间件跨域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#中间件跨域"}},[t._v("#")]),t._v(" 中间件跨域")]),t._v(" "),a("p",[t._v("和nginx原理相同，通过代理服务器实现数据转发。")]),t._v(" "),a("h2",{attrs:{id:"websocket"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#websocket"}},[t._v("#")]),t._v(" WebSocket")]),t._v(" "),a("p",[t._v("WebSocket是一种HTML5的新协议，用于实现浏览器和服务器的全双工通信，并且支持跨域")]),t._v(" "),a("h2",{attrs:{id:"document-domain-iframe"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#document-domain-iframe"}},[t._v("#")]),t._v(" document.domain + iframe")]),t._v(" "),a("p",[t._v("仅限两个页面的主域相同，子域不同的情况。\neg：http://www.domain.com/a.html和http://child.domain.com/b.html。")]),t._v(" "),a("p",[t._v("原理：两个页面都通过js强制设置document.domain为基础主域（相同的domain.com）")]),t._v(" "),a("h2",{attrs:{id:"location-hash-iframe"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#location-hash-iframe"}},[t._v("#")]),t._v(" location.hash + iframe")]),t._v(" "),a("p",[t._v("A域的a页面和B域的b页面之间想要通信，则通过一个A域的c页面。")]),t._v(" "),a("p",[t._v("a和b、b和c之间，都是单向通信，但a和c之间是同域所以可以实现双向通信")]),t._v(" "),a("h2",{attrs:{id:"window-name-iframe"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#window-name-iframe"}},[t._v("#")]),t._v(" window.name + iframe")]),t._v(" "),a("p",[a("code",[t._v("window.name")]),t._v("属性的特殊之处：在不同的页面加载后仍然存在，且可以支持很长的name值（2MB）")]),t._v(" "),a("p",[t._v("原理：")]),t._v(" "),a("ul",[a("li",[t._v("a.html要和b.html通信，引入一个代理页面proxy.html。")]),t._v(" "),a("li",[t._v("在a中，先用iframe加载b，然后再次加载proxy，此时window.name属性仍然存在，且a和proxy同域可以读取")])]),t._v(" "),a("h2",{attrs:{id:"postmessage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#postmessage"}},[t._v("#")]),t._v(" postMessage")]),t._v(" "),a("p",[a("code",[t._v("postMessage")]),t._v("是HTML5新提供的允许跨域的API，可以实现页面和iframe之间的消息传递")])])}),[],!1,null,null,null);a.default=n.exports}}]);