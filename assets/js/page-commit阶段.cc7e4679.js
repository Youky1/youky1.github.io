(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{599:function(t,s,a){"use strict";a.r(s);var e=a(1),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"commit-阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commit-阶段"}},[t._v("#")]),t._v(" commit 阶段")]),t._v(" "),s("p",[t._v("renderer 工作的阶段被称为 commit 阶段，该阶段会把所有的副作用 commit 到宿主 UI 上。\n与 render 流程不同，commit 流程是同步的，一旦开始不会被打断。")]),t._v(" "),s("h2",{attrs:{id:"流程概览"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#流程概览"}},[t._v("#")]),t._v(" 流程概览")]),t._v(" "),s("p",[t._v("整个 commit 阶段分为三个子阶段：")]),t._v(" "),s("ol",[s("li",[t._v("beforeMutation")]),t._v(" "),s("li",[t._v("Mutation")]),t._v(" "),s("li",[t._v("Fiber 树切换，Layout")])]),t._v(" "),s("p",[t._v("首先会通过 wip HostRootFiber 的 flags 和 subtreeFlags 判断是否有副作用，如果没有，则跳过 1 和 2。")]),t._v(" "),s("p",[t._v("commit 的三个子阶段会进行自下而上的 subtreeFlags 消费过程：")]),t._v(" "),s("ol",[s("li",[t._v("首先，向下遍历找到执行 flags 操作的节点，需要满足两个条件之一：")])]),t._v(" "),s("ul",[s("li",[t._v("叶子节点")]),t._v(" "),s("li",[t._v("子 fiberNode 不包含本次更新对应的 flags")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("执行 flags 对应的操作。")])]),t._v(" "),s("ul",[s("li",[t._v("如果当前 fiberNode 存在兄弟节点，则对兄弟节点重复该流程。")]),t._v(" "),s("li",[t._v("若不存在，返回父节点，直到遍历到 HostRootFiber 为止")])]),t._v(" "),s("h2",{attrs:{id:"effects-list-和-subtreeflags"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#effects-list-和-subtreeflags"}},[t._v("#")]),t._v(" Effects list 和 subtreeFlags")]),t._v(" "),s("p",[t._v("在 Fiber 架构的早期版本中没有 subtreeFlags，而是使用一个链表 Effects list 保存被标记副作用的 fiberNode。在 commit 阶段也无需遍历 fiber tree，只需遍历链表即可。")]),t._v(" "),s("h3",{attrs:{id:"使用-subtreeflags-的原因"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-subtreeflags-的原因"}},[t._v("#")]),t._v(" 使用 subtreeFlags 的原因")]),t._v(" "),s("p",[t._v("开启并发的 Suspense 需要遍历子树。")]),t._v(" "),s("p",[t._v("开启并发的 Suspense 和 Legacy Suspense 的区别是：")]),t._v(" "),s("ul",[s("li",[t._v("Legacy Suspense 中，当 Suspense 内同时存在异步组件和同步内容时，同步内容会先加载，组件的 useEffect 也会执行，但为了 UI 上的不展示，此时同步元素会添加 "),s("code",[t._v("display:none")])]),t._v(" "),s("li",[t._v("并发 Suspense 中，同步内容不会被先渲染，也不会执行 useEffect 回调")])]),t._v(" "),s("h2",{attrs:{id:"beforemutation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#beforemutation"}},[t._v("#")]),t._v(" beforeMutation")]),t._v(" "),s("p",[t._v("beforeMutation阶段主要处理两种节点：")]),t._v(" "),s("ul",[s("li",[t._v("对于类组件，执行其 "),s("code",[t._v("getSnapshotBeforeUpdate")]),t._v(" 生命周期函数")]),t._v(" "),s("li",[t._v("对于HostRoot，清空其挂载内容，以便Mutation阶段的渲染")])]),t._v(" "),s("h2",{attrs:{id:"mutation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mutation"}},[t._v("#")]),t._v(" Mutation")]),t._v(" "),s("h3",{attrs:{id:"删除dom元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除dom元素"}},[t._v("#")]),t._v(" 删除DOM元素")]),t._v(" "),s("p",[t._v("删除DOM元素的操作发生在向下遍历的过程中，会对标记了删除的节点进行删除DOM操作。执行删除操作的是 "),s("code",[t._v("commitDeletion")]),t._v(" 方法，除了删除DOM还需要触发子组件的生命周期（Hook）、ref卸载等")]),t._v(" "),s("h3",{attrs:{id:"插入、移动dom元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插入、移动dom元素"}},[t._v("#")]),t._v(" 插入、移动DOM元素")]),t._v(" "),s("p",[t._v("插入（mount）和移动（update）对应的flag标记是相同的，都是 "),s("code",[t._v("Placement")]),t._v("，用于处理的方法也一样")]),t._v(" "),s("p",[t._v("插入和移动DOM元素的流程 主要分为三个步骤：")]),t._v(" "),s("ol",[s("li",[t._v("向上寻找本次操作元素的父级DOM，它的类型必须是HostComponent、HostRoot、HostPortal中的一种")]),t._v(" "),s("li",[t._v("查找插入位置的兄弟元素before。这个before元素自身必须是稳定的，即没有被标记 "),s("code",[t._v("Placement")]),t._v("。")]),t._v(" "),s("li",[t._v("如果找到，使用 "),s("code",[t._v("parentNode.insertBefore")]),t._v(" 插入（移动）到 before 之前；如果没有，使用 "),s("code",[t._v("parentNode.appendChild")]),t._v(" 插入（移动）到末尾")])]),t._v(" "),s("h3",{attrs:{id:"更新dom元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更新dom元素"}},[t._v("#")]),t._v(" 更新DOM元素")]),t._v(" "),s("p",[t._v("元素需要更新的属性在 render 阶段的 "),s("code",[t._v("completeWork")]),t._v(" 时存储到了fiber的updateQueue中。更新针对：")]),t._v(" "),s("ol",[s("li",[t._v("style")]),t._v(" "),s("li",[t._v("innerHTML")]),t._v(" "),s("li",[t._v("直接文本节点变化")]),t._v(" "),s("li",[t._v("其他元素属性")])]),t._v(" "),s("h3",{attrs:{id:"ref解绑"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ref解绑"}},[t._v("#")]),t._v(" ref解绑")]),t._v(" "),s("p",[t._v("当前面流程处理的DOM元素或组件上绑定了ref时，Mutation阶段会使用 "),s("code",[t._v("safelyDetachRef")]),t._v(" 方法进行ref重置")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("safelyDetachRef")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("current")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("nearestMountedAncestor")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ref "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ref"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ref "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" ref "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果ref为一个函数，直接调用ref，传递一个null，来重置")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        ref"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("h2",{attrs:{id:"fiber树切换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fiber树切换"}},[t._v("#")]),t._v(" Fiber树切换")]),t._v(" "),s("p",[t._v("current Fiber和wip Fiber树切换的时机是Mutation阶段结束后，Layout开始前。")]),t._v(" "),s("p",[t._v("这个切换时机是因为在类组件中：")]),t._v(" "),s("ul",[s("li",[t._v("componentWillUnmount 中（Mutation阶段），current Fiber 树仍对应UI更新前的 Fiber 树")]),t._v(" "),s("li",[t._v("componentDidMount/componentDidUpdate中（Layout阶段），current Fiber切换为更新后的Fiber（之前的wip）")])]),t._v(" "),s("h2",{attrs:{id:"layout"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#layout"}},[t._v("#")]),t._v(" Layout")]),t._v(" "),s("p",[t._v("在Layout阶段，向下遍历找到消费flags的起点元素的过程中，也会对节点进行特有操作，是对于离屏组件的显隐逻辑。")]),t._v(" "),s("h3",{attrs:{id:"触发生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#触发生命周期"}},[t._v("#")]),t._v(" 触发生命周期")]),t._v(" "),s("p",[t._v("向下遍历找到起点元素后，进入到对flags的消费流程，对遍历的每个 Fiber：")]),t._v(" "),s("ul",[s("li",[t._v("对于类组件：\n"),s("ul",[s("li",[t._v("触发其componentDidMount/Update")]),t._v(" "),s("li",[t._v("this.setState 中的回调会在此时执行")])])]),t._v(" "),s("li",[t._v("对于函数组件，触发其 useLayoutEffect 的 callback")]),t._v(" "),s("li",[t._v("对于 HostComponent，ReactDOM.render 的 callback 会在此时执行")])]),t._v(" "),s("h3",{attrs:{id:"绑定ref"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#绑定ref"}},[t._v("#")]),t._v(" 绑定ref")]),t._v(" "),s("p",[t._v("对于在 Mutation 阶段重置了 ref 的元素，在本阶段会用使用 "),s("code",[t._v("commitLayoutEffectOnFiber")]),t._v(" 方法重新绑定ref。此时必须满足条件：")]),t._v(" "),s("ul",[s("li",[t._v("元素有副作用标记 "),s("code",[t._v("Ref")])]),t._v(" "),s("li",[t._v("当前节点不是离屏元素")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("commitLayoutEffectOnFiber")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("finishedRoot")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" FiberRoot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("current")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("finishedWork")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("committedLanes")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lanes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("offscreenSubtreeWasHidden"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("finishedWork"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flags "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" Ref"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("commitAttachRef")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("finishedWork"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])])])}),[],!1,null,null,null);s.default=r.exports}}]);