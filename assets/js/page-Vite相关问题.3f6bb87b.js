(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{623:function(t,a,e){"use strict";e.r(a);var v=e(1),_=Object(v.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"vite-相关问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vite-相关问题"}},[t._v("#")]),t._v(" Vite 相关问题")]),t._v(" "),a("h2",{attrs:{id:"vite-的流程和-webpack-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vite-的流程和-webpack-的区别"}},[t._v("#")]),t._v(" Vite 的流程和 Webpack 的区别")]),t._v(" "),a("h3",{attrs:{id:"webpack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack"}},[t._v("#")]),t._v(" Webpack")]),t._v(" "),a("ol",[a("li",[t._v("识别入口")]),t._v(" "),a("li",[t._v("分析模块的依赖关系")]),t._v(" "),a("li",[t._v("分析代码、转换代码、编译代码、输出代码")]),t._v(" "),a("li",[t._v("生成打包后的产物")])]),t._v(" "),a("h3",{attrs:{id:"vite"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vite"}},[t._v("#")]),t._v(" Vite")]),t._v(" "),a("blockquote",[a("p",[t._v("省去了对源码的打包编译阶段")])]),t._v(" "),a("p",[t._v("当 script 标签声明了 "),a("code",[t._v("type=module")]),t._v(" 后，浏览器就会发起一个 GET 请求。Vite 做的就是劫持这些请求，对相应的文件进行整合并返回。")]),t._v(" "),a("p",[t._v("初次启动时，对资源进行预打包，准备好 ESM 模块。")]),t._v(" "),a("h2",{attrs:{id:"和-webpack-相比-优缺点是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#和-webpack-相比-优缺点是什么"}},[t._v("#")]),t._v(" 和 Webpack 相比，优缺点是什么")]),t._v(" "),a("p",[t._v("优点：")]),t._v(" "),a("ol",[a("li",[t._v("更快的构建速度、热更新速度")]),t._v(" "),a("li",[t._v("更好的利用了浏览器，如利用浏览器的 ESM 的支持和使用 HTTP 头进行协商缓存")])]),t._v(" "),a("p",[t._v("缺点：")]),t._v(" "),a("ol",[a("li",[t._v("生态上：不如 webpack 丰富")]),t._v(" "),a("li",[t._v("兼容性上：只支持现代浏览器，需要原生支持模块功能")])]),t._v(" "),a("h2",{attrs:{id:"为什么-esbuild-更快"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么-esbuild-更快"}},[t._v("#")]),t._v(" 为什么 esbuild 更快？")]),t._v(" "),a("ol",[a("li",[t._v("使用 Go 编写，并编译为可执行代码")]),t._v(" "),a("li",[t._v("不依赖其他库，自己从零开始实现所有功能，始终考虑性能问题且不需要进行数据结构的转化")])])])}),[],!1,null,null,null);a.default=_.exports}}]);